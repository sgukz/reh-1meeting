{"version":3,"sources":["pages/HomePage.js","pages/ProfilePage.js","pages/RegisterPage.js","Routes.js","App.js","registerServiceWorker.js","index.js","assets/default-image.jpg","config.js"],"names":["today","Date","getTime","jwt","require","DateTimeThai","datetime","format","date","split","date_str","time_str","new_date","10","11","12","parseInt","new_time","HomePage","props","useState","userid","setUserID","docno","setDocno","startdate","setStartDate","starttime","setStartTime","enddate","setEndDate","endtime","setEndTime","meetingHost","setMeetingHost","meetingRoom","setMeetingRoom","humanAmount","setHumanAmount","humenTotal","setHumanTotal","isMeeting","setIsMeeting","isRegister","setIsRegister","isCheckIn","setIsCheckIn","isCheckOut","setIsCheckOut","isTimeMeeting","setIsTimeMeeting","preLoad","setPreLoad","pname","setPname","fname","setFname","lname","setLname","idcard","setIDcard","email","setEmail","position","setPosition","department","setDepartment","government","setGovernment","phone","setPhoneNumber","userMeeting","setUserMeeting","isShowUser","setIsShowUser","InitailizeLiff","userId","base_url","config","main_config","APP_URL","header","Authorization","TOKEN_APP","axios","post","headers","then","resp","data","length","localStorage","setItem","JSON","stringify","data_info","removeItem","catch","error","console","log","CheckUser","str","location","search","params","meetingid","get","code","startDate","start_date","endDate","end_date","meeting_host_name","meeting_name","human_amount","total","total_meeting","getMeeting","userID","check_in_date","check_out_date","getCheckInCheckOut","useEffect","className","color","style","height","type","duration","md","fontSize","gradient","size","onClick","Swal","fire","title","text","check_date","showDenyButton","showCancelButton","showCloseButton","confirmButtonText","result","isConfirmed","window","reload","msg","icon","checkIn","checkOut","mapUser","map","decoded","verify","user","fullname","push","getUserMeetingByMeetingID","role","key","pill","onSubmit","event","preventDefault","target","formData","token","htmlFor","onChange","value","name","required","id","readOnly","floating","rounded","paddingBottom","ProfilePage","Component","constructor","super","a","liff","init","liffId","isLoggedIn","getProfile","profile","LoadDataUser","setState","displayName","urlPicture","pictureUrl","err","this","state","isChange","getItem","parse","DefaultImg","handleChange","bind","submitHandler","names","val","showConfirmButton","setTimeout","history","componentDidMount","render","src","width","alt","RegisterPage","useHistory","alert","Routes","React","exact","path","component","pkgVersion","version","App","collapseID","toggleCollapse","prevState","closeCollapse","collID","scrollTo","overlay","backgroundColor","dark","expand","fixed","scrolling","href","isOpen","navbar","right","to","marginTop","textAlign","cursor","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.8c39c002.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport liff from \"@line/liff\";\r\nimport config from \"../config\";\r\nimport {\r\n  MDBEdgeHeader,\r\n  MDBFreeBird,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBCardBody,\r\n  MDBAnimation,\r\n  MDBBtn,\r\n  MDBIcon,\r\n  MDBListGroup,\r\n  MDBListGroupItem,\r\n  MDBBadge,\r\n} from \"mdbreact\";\r\nimport \"./HomePage.css\";\r\nlet today = new Date().getTime();\r\nconst jwt = require(\"jsonwebtoken\");\r\nfunction DateTimeThai(datetime, format) {\r\n  let thmonth = {\r\n    \"01\": \"มกราคม\",\r\n    \"02\": \"กุมภาพันธ์\",\r\n    \"03\": \"มีนาคม\",\r\n    \"04\": \"เมษายน\",\r\n    \"05\": \"พฤษภาคม\",\r\n    \"06\": \"มิถุนายน\",\r\n    \"07\": \"กรกฎาคม\",\r\n    \"08\": \"สิงหาคม\",\r\n    \"09\": \"กันยายน\",\r\n    10: \"ตุลาคม\",\r\n    11: \"พฤศจิกายน\",\r\n    12: \"ธันวาคม\",\r\n  };\r\n  let createdDate = \"\";\r\n  let date = datetime.split(\" \");\r\n  let date_str = date[0].split(\"-\");\r\n  let time_str = date[1].split(\":\");\r\n  let new_date = `${date_str[2]} ${thmonth[date_str[1]]} ${\r\n    parseInt(date_str[0]) + 543\r\n  }`;\r\n  let new_time = `${time_str[0]}:${time_str[1]} น.`;\r\n  if (format === 1) {\r\n    createdDate = new_date;\r\n  } else if (format === 2) {\r\n    createdDate = new_time;\r\n  } else {\r\n    createdDate = new_date + \" \" + new_time;\r\n  }\r\n  return createdDate;\r\n}\r\n\r\nconst HomePage = (props) => {\r\n  // const history = useHistory();\r\n  const [userid, setUserID] = useState(\"0\");\r\n  const [docno, setDocno] = useState(\"\");\r\n  const [startdate, setStartDate] = useState(\"\");\r\n  const [starttime, setStartTime] = useState(\"\");\r\n  const [enddate, setEndDate] = useState(\"\");\r\n  const [endtime, setEndTime] = useState(\"\");\r\n  const [meetingHost, setMeetingHost] = useState(\"\");\r\n  const [meetingRoom, setMeetingRoom] = useState(\"\");\r\n  const [humanAmount, setHumanAmount] = useState(\"\");\r\n  const [humenTotal, setHumanTotal] = useState(\"\");\r\n  const [isMeeting, setIsMeeting] = useState(false);\r\n  const [isRegister, setIsRegister] = useState(false);\r\n  const [isCheckIn, setIsCheckIn] = useState(\"\");\r\n  const [isCheckOut, setIsCheckOut] = useState(\"\");\r\n  const [isTimeMeeting, setIsTimeMeeting] = useState(0);\r\n  const [preLoad, setPreLoad] = useState(true);\r\n\r\n  const [pname, setPname] = useState(\"\");\r\n  const [fname, setFname] = useState(\"\");\r\n  const [lname, setLname] = useState(\"\");\r\n  const [idcard, setIDcard] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [position, setPosition] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [government, setGovernment] = useState(\"โรงพยาบาลร้อยเอ็ด\");\r\n  const [phone, setPhoneNumber] = useState(\"\");\r\n  const [userMeeting, setUserMeeting] = useState([]);\r\n  const [isShowUser, setIsShowUser] = useState(false);\r\n  const CheckUser = (userId) => {\r\n    const base_url = `${config.main_config.APP_URL}/user`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios\r\n      .post(base_url, { userid: userId }, { headers: header })\r\n      .then((resp) => {\r\n        if (resp.data.data.length > 0) {\r\n          // console.log(\"LoggedIn\");\r\n          localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify(resp.data.data[0].data_info)\r\n          );\r\n          setPreLoad(false);\r\n          setIsRegister(true);\r\n        } else {\r\n          // console.log(\"Invalid Logged\");\r\n          setPreLoad(false);\r\n          setIsRegister(false);\r\n          localStorage.removeItem(\"user\");\r\n          localStorage.removeItem(\"userid\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    const formData = {\r\n      userid: userid,\r\n      idcard: idcard,\r\n      pname: pname,\r\n      fname: fname,\r\n      lname: lname,\r\n      email: email,\r\n      position: position,\r\n      department: department,\r\n      government: government,\r\n      phone: phone,\r\n    };\r\n    const base_url = `${config.main_config.APP_URL}/user/register`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios.post(base_url, formData, { headers: header }).then((resp) => {\r\n      if (resp.data.code === 200) {\r\n        localStorage.setItem(\"user\", JSON.stringify(resp.data.data.token));\r\n        Swal.fire({\r\n          title: \"ลงทะเบียนเรียบร้อย\",\r\n          text: \"กรุณารอสักครู่...\",\r\n          icon: \"success\",\r\n          showDenyButton: false,\r\n          showCancelButton: false,\r\n          showCloseButton: false,\r\n          confirmButtonText: `ตกลง`,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            window.location.reload();\r\n          }\r\n        });\r\n      } else if (resp.data.code === 400) {\r\n        Swal.fire({\r\n          title: \"แจ้งเตือน\",\r\n          text: resp.data.msg,\r\n          icon: \"warning\",\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: \"แจ้งเตือน\",\r\n          text: resp.data.error,\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n  const getMeeting = (meetingid) => {\r\n    const docno = meetingid;\r\n    const base_url = `${config.main_config.APP_URL}/getMeetingByDocno/${docno}`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios\r\n      .get(base_url, { headers: header })\r\n      .then((resp) => {\r\n        // console.log(resp.data);\r\n        if (resp.data.code === 200) {\r\n          let startDate = new Date(resp.data.data[0].start_date).getTime();\r\n          let endDate = new Date(resp.data.data[0].end_date).getTime();\r\n          if ((startDate - today) / 1000 > 1800) {\r\n            setIsTimeMeeting(1);\r\n          }\r\n          if (today > endDate) {\r\n            setIsTimeMeeting(2);\r\n          }\r\n          setDocno(resp.data.data[0].docno);\r\n          setStartDate(DateTimeThai(resp.data.data[0].start_date, 1));\r\n          setStartTime(DateTimeThai(resp.data.data[0].start_date, 2));\r\n          setEndDate(DateTimeThai(resp.data.data[0].end_date, 1));\r\n          setEndTime(DateTimeThai(resp.data.data[0].end_date, 2));\r\n          setMeetingHost(resp.data.data[0].meeting_host_name);\r\n          setMeetingRoom(resp.data.data[0].meeting_name);\r\n          setHumanAmount(resp.data.data[0].human_amount);\r\n          setHumanTotal(resp.data.total[0].total_meeting);\r\n          setIsMeeting(true);\r\n          localStorage.setItem(\"isMeeting\", \"true\");\r\n        } else if (resp.data.code === 400) {\r\n          localStorage.setItem(\"isMeeting\", \"false\");\r\n          setIsMeeting(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const checkIn = (userid, meetingid) => {\r\n    const base_url = `${config.main_config.APP_URL}/saveCheckIn`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios\r\n      .post(base_url, { userid: userid, docno: meetingid }, { headers: header })\r\n      .then((resp) => {\r\n        if (resp.data.code === 200) {\r\n          Swal.fire({\r\n            title: \"เช็คอินเข้าประชุมเรียบร้อย\",\r\n            text: `เวลา ${DateTimeThai(\r\n              resp.data.check_date[0].check_in_date,\r\n              3\r\n            )}`,\r\n            showDenyButton: false,\r\n            showCancelButton: false,\r\n            showCloseButton: false,\r\n            confirmButtonText: `ตกลง`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              window.location.reload();\r\n            }\r\n          });\r\n        } else if (resp.data.code === 400) {\r\n          Swal.fire({\r\n            title: \"แจ้งเตือน\",\r\n            text: resp.data.msg,\r\n            icon: \"error\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const checkOut = (userid, meetingid) => {\r\n    const base_url = `${config.main_config.APP_URL}/saveCheckOut`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios\r\n      .post(base_url, { userid: userid, docno: meetingid }, { headers: header })\r\n      .then((resp) => {\r\n        if (resp.data.code === 200) {\r\n          Swal.fire({\r\n            title: \"เช็คเอ้าท์ออกจากประชุมเรียบร้อย\",\r\n            text: `เวลา ${DateTimeThai(\r\n              resp.data.check_date[0].check_out_date,\r\n              3\r\n            )}`,\r\n            showDenyButton: false,\r\n            showCancelButton: false,\r\n            showCloseButton: false,\r\n            confirmButtonText: `ตกลง`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              window.location.reload();\r\n            }\r\n          });\r\n        } else if (resp.data.code === 400) {\r\n          Swal.fire({\r\n            title: \"แจ้งเตือน\",\r\n            text: resp.data.msg,\r\n            icon: \"error\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const getCheckInCheckOut = (userID, meetingid) => {\r\n    const base_url = `${config.main_config.APP_URL}/getCheckInCheckOut/${userID}/${meetingid}`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios\r\n      .get(base_url, { headers: header })\r\n      .then((resp) => {\r\n        // console.log(resp.data);\r\n        if (resp.data.code === 200) {\r\n          setIsCheckIn(\r\n            resp.data.data[0].check_in_date !== null\r\n              ? DateTimeThai(resp.data.data[0].check_in_date, 3)\r\n              : \"\"\r\n          );\r\n          setIsCheckOut(\r\n            resp.data.data[0].check_out_date !== null\r\n              ? DateTimeThai(resp.data.data[0].check_out_date, 3)\r\n              : \"\"\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const getUserMeetingByMeetingID = (meetingid) => {\r\n    setIsShowUser(true);\r\n    const base_url = `${config.main_config.APP_URL}/getUserMeetingByMeetingID/${meetingid}`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios\r\n      .get(base_url, { headers: header })\r\n      .then((resp) => {\r\n        console.log(resp.data);\r\n        if (resp.data.code === 200) {\r\n          let mapUser = [];\r\n          resp.data.data.map((data) => {\r\n            if (data.data_info !== null) {\r\n              let decoded = jwt.verify(\r\n                data.data_info,\r\n                config.main_config.TOKEN_APP\r\n              );\r\n              let user = {\r\n                check_in_date: data.check_in_date,\r\n                check_out_date: data.check_out_date,\r\n                fullname: `${decoded.pname}${decoded.fname} ${decoded.lname}`,\r\n              };\r\n              mapUser.push(user);\r\n            }\r\n          });\r\n          setUserMeeting(mapUser);\r\n          setIsShowUser(!true);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const InitailizeLiff = () => {\r\n    setUserID(\"U0ce66a9d268b3f1d81d04b30631acc87\");\r\n    CheckUser(\"U0ce66a9d268b3f1d81d04b30631acc87\");\r\n    let queryString = props.location.search;\r\n    let str = queryString.split(\"=\");\r\n    let params = str.length > 1 ? str[1] : 0;\r\n    getMeeting(params);\r\n    getCheckInCheckOut(\"U0ce66a9d268b3f1d81d04b30631acc87\", params);\r\n    // liff.init(\r\n    //   {\r\n    //     liffId: \"1655384297-BvEewepx\",\r\n    //   },\r\n    //   () => {\r\n    //     if (liff.isLoggedIn()) {\r\n    //       liff.getProfile().then((profile) => {\r\n    //         localStorage.setItem(\"profile-line\", JSON.stringify(profile));\r\n    //         setUserID(profile.userId);\r\n    //         CheckUser(profile.userId);\r\n    //         let queryString = props.location.search;\r\n    //         let str = queryString.split(\"=\");\r\n    //         let params = str.length > 1 ? str[1] : 0;\r\n    //         getMeeting(params);\r\n    //         getCheckInCheckOut(profile.userId, params);\r\n    //       });\r\n    //     }\r\n    //   },\r\n    //   (err) => console.log(err)\r\n    // );\r\n  };\r\n\r\n  useEffect(() => {\r\n    InitailizeLiff();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className={preLoad === true ? \"loading\" : \"hidden\"}>\r\n        Loading&#8230;\r\n      </div>\r\n      <MDBEdgeHeader\r\n        color=\"red lighten-5\"\r\n        className=\"sectionPage\"\r\n        style={{ height: 100 }}\r\n      />\r\n      <div className=\"mt-3 mb-5\">\r\n        <MDBAnimation type=\"zoomIn\" duration=\"500ms\">\r\n          <MDBFreeBird>\r\n            <MDBRow>\r\n              <MDBCol\r\n                md=\"10\"\r\n                className=\"mx-auto float-none white z-depth-1 py-2 px-2\"\r\n              >\r\n                <MDBCardBody>\r\n                  <div>\r\n                    <MDBCol>\r\n                      <h6 className=\"h6-responsive mb-4 text-center\">\r\n                        <strong className=\"font-weight-bold text-primary\">\r\n                          กรุณา Scan QR Code เพื่อเข้าร่วมประชุม\r\n                        </strong>\r\n                      </h6>\r\n                    </MDBCol>\r\n                  </div>\r\n                  {/* {JSON.stringify(isMeeting)}\r\n                  {JSON.stringify(isRegister)} */}\r\n                  <div\r\n                    className={\r\n                      isMeeting === true && isRegister === true ? \"\" : \"hidden\"\r\n                    }\r\n                  >\r\n                    <MDBCol md=\"12\">\r\n                      <blockquote className=\"blockquote bq-primary\">\r\n                        <p className=\"bq-title\" style={{ fontSize: \"16px\" }}>\r\n                          {meetingRoom}\r\n                        </p>\r\n                        <strong style={{ fontSize: \"16px\" }}>\r\n                          หัวข้อ {meetingHost}\r\n                        </strong>\r\n                        <div>\r\n                          <strong style={{ fontSize: \"14px\" }}>\r\n                            {startdate === enddate\r\n                              ? \"วันที่ \" + startdate\r\n                              : \"ระหว่างวันที่ \" + startdate + \" - \" + enddate}\r\n                          </strong>\r\n                        </div>\r\n                        <div>\r\n                          <small style={{ fontSize: \"14px\" }}>\r\n                            เวลา {starttime} - {endtime}\r\n                          </small>\r\n                        </div>\r\n                        <div>\r\n                          <small style={{ fontSize: \"14px\" }}>\r\n                            เข้าประชุมแล้ว {humenTotal}/{humanAmount} คน\r\n                          </small>\r\n                        </div>\r\n                      </blockquote>\r\n                    </MDBCol>\r\n                    <MDBCol className=\"text-center\">\r\n                      <div>\r\n                        <span\r\n                          className={\r\n                            isTimeMeeting === 0\r\n                              ? \"hidden\"\r\n                              : isTimeMeeting === 1\r\n                              ? \"text-primary\"\r\n                              : \"text-danger\"\r\n                          }\r\n                        >\r\n                          {isTimeMeeting === 1\r\n                            ? \"สามารถเช็คอินเข้าห้องประชุมได้ก่อน 30 นาที\"\r\n                            : \"จบการประชุมแล้ว\"}\r\n                        </span>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-success\">\r\n                          {isCheckIn !== \"\" ? \"เช็คอินเมื่อ \" + isCheckIn : \"\"}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"mt-3\">\r\n                        <span className=\"text-danger\">\r\n                          {isCheckOut !== \"\"\r\n                            ? \"เช็คเอาท์เมื่อ \" + isCheckOut\r\n                            : \"\"}\r\n                        </span>\r\n                      </div>\r\n                      <div className={isTimeMeeting === 1 ? \"hidden\" : \"\"}>\r\n                        <div>\r\n                          <MDBBtn\r\n                            gradient=\"blue\"\r\n                            size=\"sm\"\r\n                            className={isCheckIn !== \"\" ? \"hidden\" : \"\"}\r\n                            onClick={() => checkIn(userid, docno)}\r\n                          >\r\n                            Check-in\r\n                          </MDBBtn>\r\n                          <MDBBtn\r\n                            size=\"sm\"\r\n                            color=\"danger\"\r\n                            className={isCheckOut !== \"\" ? \"hidden\" : \"\"}\r\n                            onClick={() => checkOut(userid, docno)}\r\n                          >\r\n                            Check-out\r\n                          </MDBBtn>\r\n                        </div>\r\n                      </div>\r\n                    </MDBCol>\r\n                    <MDBCol className=\"text-center\">\r\n                      <div>\r\n                        <strong\r\n                          onClick={() => getUserMeetingByMeetingID(docno)}\r\n                          className=\"btn btn-outline-info\"\r\n                        >\r\n                          รายชื่อผู้เข้าร่วม\r\n                        </strong>\r\n                        {isShowUser && (\r\n                          <div className=\"my-3 d-flex justify-content-around\">\r\n                            <div className=\"spinner-border fast\" role=\"status\">\r\n                              <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                        <div\r\n                          className={`text-center ${\r\n                            userMeeting === null ? \"hidden\" : \"\"\r\n                          }`}\r\n                        >\r\n                          <MDBListGroup>\r\n                            {userMeeting.map((data) => {\r\n                              return (\r\n                                <div key={JSON.stringify(data)}>\r\n                                  <MDBListGroupItem className=\"align-items-center\">\r\n                                    <strong className=\"mr-3\">\r\n                                      {data.fullname}\r\n                                    </strong>\r\n                                    <MDBBadge\r\n                                      color=\"primary\"\r\n                                      pill\r\n                                      className=\"mr-3\"\r\n                                    >\r\n                                      {data.check_in_date !== null\r\n                                        ? \"เช็คอินเวลา \" +\r\n                                          DateTimeThai(data.check_in_date, 2)\r\n                                        : \"\"}\r\n                                    </MDBBadge>\r\n                                    {data.check_out_date !== null ? (\r\n                                      <MDBBadge color=\"danger\" pill>\r\n                                        {\"เช็คเอาท์เวลา \" +\r\n                                          DateTimeThai(data.check_out_date, 2)}\r\n                                      </MDBBadge>\r\n                                    ) : (\r\n                                      \"ยังไม่เช็คเอาท์\"\r\n                                    )}\r\n                                  </MDBListGroupItem>\r\n                                </div>\r\n                              );\r\n                            })}\r\n                          </MDBListGroup>\r\n                          {/* {JSON.stringify(userMeeting)} */}\r\n                        </div>\r\n                      </div>\r\n                    </MDBCol>\r\n                  </div>\r\n                  <div className={isRegister ? \"hidden\" : \"\"}>\r\n                    <MDBCol md=\"12\">\r\n                      <h5 className=\"text-primary\">ลงทะเบียนผู้ใช้งานใหม่</h5>\r\n                      <form\r\n                        className=\"needs-validation\"\r\n                        onSubmit={submitHandler}\r\n                      >\r\n                        <MDBRow>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"pname\" className=\"grey-text\">\r\n                              คำนำหน้า <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <input\r\n                              onChange={(text) => setPname(text.target.value)}\r\n                              type=\"text\"\r\n                              value={pname}\r\n                              className=\"form-control\"\r\n                              name=\"pname\"\r\n                              required\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"fname\" className=\"grey-text\">\r\n                              ชื่อ <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <input\r\n                              onChange={(text) => setFname(text.target.value)}\r\n                              type=\"text\"\r\n                              value={fname}\r\n                              className=\"form-control\"\r\n                              name=\"fname\"\r\n                              required\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"lname\" className=\"grey-text\">\r\n                              นามสกุล <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <input\r\n                              onChange={(text) => setLname(text.target.value)}\r\n                              type=\"text\"\r\n                              value={lname}\r\n                              className=\"form-control\"\r\n                              required\r\n                            />\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                        <MDBRow>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"email\" className=\"grey-text\">\r\n                              เลขบัตรประชาชน{\" \"}\r\n                              <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <input\r\n                              onChange={(text) => setIDcard(text.target.value)}\r\n                              type=\"number\"\r\n                              value={idcard}\r\n                              className=\"form-control\"\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"email\" className=\"grey-text\">\r\n                              อีเมล <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <input\r\n                              onChange={(text) => setEmail(text.target.value)}\r\n                              type=\"email\"\r\n                              value={email}\r\n                              className=\"form-control\"\r\n                            />\r\n                            <small\r\n                              id=\"emailHelp\"\r\n                              className=\"form-text text-muted\"\r\n                            >\r\n                              อีเมลที่สามารถติดต่อได้จริง\r\n                            </small>\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"position\" className=\"grey-text\">\r\n                              ตำแหน่ง <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <input\r\n                              onChange={(text) =>\r\n                                setPosition(text.target.value)\r\n                              }\r\n                              type=\"text\"\r\n                              value={position}\r\n                              className=\"form-control\"\r\n                            />\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                        <MDBRow>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"department\" className=\"grey-text\">\r\n                              หน่วยงาน <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <input\r\n                              onChange={(text) =>\r\n                                setDepartment(text.target.value)\r\n                              }\r\n                              type=\"text\"\r\n                              value={department}\r\n                              className=\"form-control\"\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"main_company\" className=\"grey-text\">\r\n                              ส่วนราชการ <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <input\r\n                              onChange={(text) =>\r\n                                setGovernment(text.target.value)\r\n                              }\r\n                              type=\"text\"\r\n                              value={government}\r\n                              className=\"form-control\"\r\n                              readOnly\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"phone_number\" className=\"grey-text\">\r\n                              เบอร์โทร\r\n                            </label>\r\n                            <input\r\n                              onChange={(text) =>\r\n                                setPhoneNumber(text.target.value)\r\n                              }\r\n                              type=\"text\"\r\n                              value={phone}\r\n                              className=\"form-control\"\r\n                            />\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                        <MDBBtn gradient=\"blue\" type=\"submit\">\r\n                          บันทึก\r\n                        </MDBBtn>\r\n                      </form>\r\n                    </MDBCol>\r\n                  </div>\r\n                </MDBCardBody>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBFreeBird>\r\n        </MDBAnimation>\r\n        <div\r\n          className={\r\n            isMeeting && !isRegister\r\n              ? \"hidden\"\r\n              : isMeeting && isRegister\r\n              ? \"hidden\"\r\n              : \"footer\"\r\n          }\r\n        >\r\n          {/* !isMeeting && !isRegister? \"hidden\": !isMeeting && isRegister? \"hidden\": \"footer\" */}\r\n          <MDBCol className=\"text-center\">\r\n            <MDBBtn\r\n              floating=\"true\"\r\n              gradient=\"blue\"\r\n              rounded\r\n              color=\"danger\"\r\n              onClick={() =>\r\n                (window.location = \"https://line.me/R/nv/QRCodeReader\")\r\n              }\r\n            >\r\n              <MDBIcon icon=\"qrcode\" size=\"4x\" />\r\n              <br />\r\n              <strong className=\"ml-2\" style={{ paddingBottom: \"15px\" }}>\r\n                SCAN QR Code\r\n              </strong>\r\n            </MDBBtn>\r\n          </MDBCol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  MDBEdgeHeader,\r\n  MDBFreeBird,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBCardBody,\r\n  MDBAnimation,\r\n  MDBBtn,\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport config from \"../config\";\r\nimport liff from \"@line/liff\";\r\nimport \"./ProfilePage.css\";\r\nimport DefaultImg from \"../assets/default-image.jpg\";\r\nconst jwt = require(\"jsonwebtoken\");\r\nclass ProfilePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userid: \"\",\r\n      pname: \"\",\r\n      fname: \"\",\r\n      lname: \"\",\r\n      idcard: \"\",\r\n      email: \"\",\r\n      position: \"\",\r\n      department: \"\",\r\n      government: \"\",\r\n      phone: \"\",\r\n      isChange: false,\r\n      displayName: localStorage.getItem(\"profile-line\")\r\n        ? JSON.parse(localStorage.getItem(\"profile-line\")).displayName\r\n        : \"\",\r\n      urlPicture: localStorage.getItem(\"profile-line\")\r\n        ? JSON.parse(localStorage.getItem(\"profile-line\")).pictureUrl\r\n        : DefaultImg,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.LoadDataUser = this.LoadDataUser.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    let names = event.target.name;\r\n    let val = event.target.value;\r\n    this.setState({ [names]: val });\r\n  }\r\n  submitHandler(event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    const {\r\n      userid,\r\n      pname,\r\n      fname,\r\n      lname,\r\n      idcard,\r\n      email,\r\n      position,\r\n      department,\r\n      government,\r\n      phone,\r\n    } = this.state;\r\n    const formData = {\r\n      userid: userid,\r\n      idcard: idcard,\r\n      pname: pname,\r\n      fname: fname,\r\n      lname: lname,\r\n      email: email,\r\n      position: position,\r\n      department: department,\r\n      government: government,\r\n      phone: phone,\r\n    };\r\n    const base_url = `${config.main_config.APP_URL}/user/update`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios.post(base_url, formData, { headers: header }).then((resp) => {\r\n      if (resp.data.code === 200) {\r\n        localStorage.setItem(\"user\", JSON.stringify(resp.data.data.token));\r\n        localStorage.setItem(\"userid\", JSON.stringify(resp.data.data.userid));\r\n        Swal.fire({\r\n          title: \"แก้ไขข้อมูลเรียบร้อย\",\r\n          text: \"กรุณารอสักครู่...\",\r\n          icon: \"success\",\r\n          showConfirmButton: false,\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 1000);\r\n      } else if (resp.data.code === 400) {\r\n        Swal.fire({\r\n          title: \"แจ้งเตือน\",\r\n          text: resp.data.msg,\r\n          icon: \"warning\",\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: \"แจ้งเตือน\",\r\n          text: resp.data.error,\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    });\r\n  }\r\n  LoadDataUser(userID) {\r\n    const base_url = `${config.main_config.APP_URL}/user/${userID}`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios.get(base_url, { headers: header }).then((resp) => {\r\n      if (resp.data.code === 200) {\r\n        if (resp.data.data.length > 0) {\r\n          const decoded = jwt.verify(\r\n            resp.data.data[0].data_info,\r\n            config.main_config.TOKEN_APP\r\n          );\r\n          this.setState({\r\n            userid: decoded.userid,\r\n            pname: decoded.pname,\r\n            fname: decoded.fname,\r\n            lname: decoded.lname,\r\n            idcard: decoded.idcard,\r\n            email: decoded.email,\r\n            position: decoded.position,\r\n            department: decoded.department,\r\n            government: decoded.government,\r\n            phone: decoded.phone,\r\n          });\r\n        } else {\r\n          this.props.history.push(\"/reh-1meeting/\");\r\n        }\r\n      }\r\n    });\r\n  }\r\n  InitailizeLiff = async () => {\r\n    await liff.init(\r\n      {\r\n        liffId: \"1655384297-BvEewepx\",\r\n      },\r\n      () => {\r\n        if (liff.isLoggedIn()) {\r\n          liff.getProfile().then((profile) => {\r\n            localStorage.setItem(\"profile-line\", JSON.stringify(profile));\r\n            this.LoadDataUser(profile.userId);\r\n            this.setState({\r\n              displayName: profile.displayName,\r\n              urlPicture: profile.pictureUrl,\r\n            });\r\n          });\r\n        }\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  };\r\n  componentDidMount() {\r\n    this.InitailizeLiff();\r\n  }\r\n  render() {\r\n    const { displayName, urlPicture } = this.state;\r\n    return (\r\n      <div>\r\n        <MDBEdgeHeader\r\n          color=\"red lighten-5\"\r\n          className=\"sectionPage\"\r\n          style={{ height: 100 }}\r\n        />\r\n        <div className=\"mt-3 mb-5\">\r\n          <MDBAnimation type=\"zoomIn\" duration=\"500ms\">\r\n            <MDBFreeBird>\r\n              <MDBRow>\r\n                <MDBCol\r\n                  md=\"10\"\r\n                  className=\"mx-auto float-none white z-depth-1 py-2 px-2\"\r\n                >\r\n                  <MDBCardBody>\r\n                    <MDBCol className=\"text-center\">\r\n                      <img\r\n                        src={urlPicture}\r\n                        width=\"150\"\r\n                        height=\"150\"\r\n                        alt=\"\"\r\n                        className=\"rounded-circle\"\r\n                      />\r\n                    </MDBCol>\r\n                    <MDBCol md=\"12\">\r\n                      <h4 className=\"font-weight-bold mt-2 mb-4 text-center\">\r\n                        {displayName}\r\n                      </h4>\r\n                      <h5 className=\"text-primary\">ข้อมูลส่วนตัว</h5>\r\n                      <form\r\n                        className=\"needs-validation\"\r\n                        onSubmit={this.submitHandler}\r\n                      >\r\n                        <MDBRow>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"pname\" className=\"grey-text\">\r\n                              คำนำหน้า <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.pname}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.pname}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"pname\"\r\n                              required\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"fname\" className=\"grey-text\">\r\n                              ชื่อ <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.fname}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.fname}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"fname\"\r\n                              required\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"lname\" className=\"grey-text\">\r\n                              นามสกุล <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.lname}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.lname}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"lname\"\r\n                              required\r\n                            />\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                        <MDBRow>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"email\" className=\"grey-text\">\r\n                              เลขบัตรประชาชน{\" \"}\r\n                              <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.idcard}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"number\"\r\n                              value={this.state.idcard}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"idcard\"\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"email\" className=\"grey-text\">\r\n                              อีเมล <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.email}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"email\"\r\n                              value={this.state.email}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"email\"\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"position\" className=\"grey-text\">\r\n                              ตำแหน่ง <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.position}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.position}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"position\"\r\n                            />\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                        <MDBRow>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"department\" className=\"grey-text\">\r\n                              หน่วยงาน <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.department}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.department}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"department\"\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"main_company\" className=\"grey-text\">\r\n                              ส่วนราชการ <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.government}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.government}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"government\"\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"phone_number\" className=\"grey-text\">\r\n                              เบอร์โทร\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.phone}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.phone}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"phone\"\r\n                            />\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                        {this.state.isChange === true ? (\r\n                          <MDBBtn gradient=\"blue\" type=\"submit\">\r\n                            บันทึกแก้ไข\r\n                          </MDBBtn>\r\n                        ) : (\r\n                          <strong\r\n                            onClick={() => this.setState({ isChange: true })}\r\n                            className=\"btn btn-outline-success\"\r\n                          >\r\n                            แก้ไขข้อมูล\r\n                          </strong>\r\n                        )}\r\n                      </form>\r\n                    </MDBCol>\r\n                  </MDBCardBody>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBFreeBird>\r\n          </MDBAnimation>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfilePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport config from \"../config\";\r\nimport liff from \"@line/liff\";\r\nimport {\r\n  MDBEdgeHeader,\r\n  MDBFreeBird,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBCardBody,\r\n  MDBAnimation,\r\n  MDBBtn,\r\n} from \"mdbreact\";\r\n\r\nconst RegisterPage = () => {\r\n  const history = useHistory();\r\n  const [userid, setUserID] = useState(\"0\");\r\n  const [pname, setPname] = useState(\"\");\r\n  const [fname, setFname] = useState(\"\");\r\n  const [lname, setLname] = useState(\"\");\r\n  const [idcard, setIDcard] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [position, setPosition] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [government, setGovernment] = useState(\"โรงพยาบาลร้อยเอ็ด\");\r\n  const [phone, setPhoneNumber] = useState(\"\");\r\n\r\n  const CheckUser = async (userId) => {\r\n    const base_url = `${config.main_config.APP_URL}/user`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    await axios\r\n      .post(base_url, { userid: userId }, { headers: header })\r\n      .then((resp) => {\r\n        if (resp.data.data.length > 0) {\r\n          localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify(resp.data.data[0].data_info)\r\n          );\r\n          history.push(\"/reh-1meeting/\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    const formData = {\r\n      userid: userid,\r\n      idcard: idcard,\r\n      pname: pname,\r\n      fname: fname,\r\n      lname: lname,\r\n      email: email,\r\n      position: position,\r\n      department: department,\r\n      government: government,\r\n      phone: phone,\r\n    };\r\n    const base_url = `${config.main_config.APP_URL}/user/register`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios.post(base_url, formData, { headers: header }).then((resp) => {\r\n      if (resp.data.code === 200) {\r\n        localStorage.setItem(\"user\", JSON.stringify(resp.data.data.token));\r\n        Swal.fire({\r\n          title: \"บันทึกข้อมูลเรียบร้อย\",\r\n          text: \"กรุณารอสักครู่...\",\r\n          icon: \"success\",\r\n        });\r\n        history.push(\"/reh-1meeting/\");\r\n      } else if (resp.data.code === 400) {\r\n        Swal.fire({\r\n          title: \"แจ้งเตือน\",\r\n          text: resp.data.msg,\r\n          icon: \"warning\",\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: \"แจ้งเตือน\",\r\n          text: resp.data.error,\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n  const InitailizeLiff = () => {\r\n    liff.init(\r\n      {\r\n        liffId: \"1655384297-9EroMoWn\",\r\n      },\r\n      () => {\r\n        if (liff.isLoggedIn()) {\r\n          liff.getProfile().then((profile) => {\r\n            setUserID(profile.userId);\r\n            CheckUser(profile.userId);\r\n          });\r\n        }else{\r\n          alert(\"No login!\")\r\n        }\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n    // const profile = localStorage.getItem(\"profile-line\");\r\n    // const getProfile = JSON.parse(profile);\r\n    // if (getProfile !== null) {\r\n    //   setUserID(getProfile.userId);\r\n    //   CheckUser(getProfile.userId);\r\n    // }else{\r\n    //   localStorage.removeItem(\"profile-line\");\r\n    // }\r\n  };\r\n  useEffect(() => {\r\n    InitailizeLiff();\r\n  });\r\n  return (\r\n    <div>\r\n      <MDBEdgeHeader\r\n        color=\"red lighten-5\"\r\n        className=\"sectionPage\"\r\n        style={{ height: 100 }}\r\n      />\r\n      <div className=\"mt-3 mb-5\">\r\n        <MDBAnimation type=\"zoomIn\" duration=\"500ms\">\r\n          <MDBFreeBird>\r\n            <MDBRow>\r\n              <MDBCol\r\n                md=\"10\"\r\n                className=\"mx-auto float-none white z-depth-1 py-2 px-2\"\r\n              >\r\n                <MDBCardBody>\r\n                  {/* {\"USERID : \" + userid} */}\r\n                  <MDBCol md=\"12\">\r\n                    <h5 className=\"text-primary\">ลงทะเบียนผู้ใช้งานใหม่</h5>\r\n                    <form className=\"needs-validation\" onSubmit={submitHandler}>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"pname\" className=\"grey-text\">\r\n                            คำนำหน้า <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setPname(text.target.value)}\r\n                            type=\"text\"\r\n                            value={pname}\r\n                            className=\"form-control\"\r\n                            name=\"pname\"\r\n                            required\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"fname\" className=\"grey-text\">\r\n                            ชื่อ <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setFname(text.target.value)}\r\n                            type=\"text\"\r\n                            value={fname}\r\n                            className=\"form-control\"\r\n                            name=\"fname\"\r\n                            required\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"lname\" className=\"grey-text\">\r\n                            นามสกุล <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setLname(text.target.value)}\r\n                            type=\"text\"\r\n                            value={lname}\r\n                            className=\"form-control\"\r\n                            required\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"email\" className=\"grey-text\">\r\n                            เลขบัตรประชาชน{\" \"}\r\n                            <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setIDcard(text.target.value)}\r\n                            type=\"number\"\r\n                            value={idcard}\r\n                            className=\"form-control\"\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"email\" className=\"grey-text\">\r\n                            อีเมล <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setEmail(text.target.value)}\r\n                            type=\"email\"\r\n                            value={email}\r\n                            className=\"form-control\"\r\n                          />\r\n                          <small\r\n                            id=\"emailHelp\"\r\n                            className=\"form-text text-muted\"\r\n                          >\r\n                            อีเมลที่สามารถติดต่อได้จริง\r\n                          </small>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"position\" className=\"grey-text\">\r\n                            ตำแหน่ง <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setPosition(text.target.value)}\r\n                            type=\"text\"\r\n                            value={position}\r\n                            className=\"form-control\"\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"department\" className=\"grey-text\">\r\n                            หน่วยงาน <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) =>\r\n                              setDepartment(text.target.value)\r\n                            }\r\n                            type=\"text\"\r\n                            value={department}\r\n                            className=\"form-control\"\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"main_company\" className=\"grey-text\">\r\n                            ส่วนราชการ <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) =>\r\n                              setGovernment(text.target.value)\r\n                            }\r\n                            type=\"text\"\r\n                            value={government}\r\n                            className=\"form-control\"\r\n                            readOnly\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"phone_number\" className=\"grey-text\">\r\n                            เบอร์โทร\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) =>\r\n                              setPhoneNumber(text.target.value)\r\n                            }\r\n                            type=\"text\"\r\n                            value={phone}\r\n                            className=\"form-control\"\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBBtn gradient=\"blue\" type=\"submit\">\r\n                        บันทึก\r\n                      </MDBBtn>\r\n                    </form>\r\n                  </MDBCol>\r\n                </MDBCardBody>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBFreeBird>\r\n        </MDBAnimation>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport { Route, Switch} from 'react-router-dom';\r\n\r\nimport HomePage from './pages/HomePage';\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport RegisterPage from './pages/RegisterPage';\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/' component={HomePage} />\r\n        <Route exact path='/reh-1meeting' component={HomePage} />\r\n        <Route exact path='/reh-1meeting/profile' component={ProfilePage} />\r\n        <Route exact path='/reh-1meeting/register' component={RegisterPage} />\r\n        <Route\r\n          render={function() {\r\n            return <h1>Page Not Found</h1>;\r\n          }}\r\n        />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n} from \"mdbreact\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport liff from \"@line/liff\";\r\nimport DefaultImg from \"./assets/default-image.jpg\";\r\nimport Routes from \"./Routes\";\r\nconst pkgVersion = require(\"../package.json\").version;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    collapseID: \"\",\r\n    displayName: localStorage.getItem(\"profile-line\")\r\n      ? JSON.parse(localStorage.getItem(\"profile-line\")).displayName\r\n      : \"\",\r\n    urlPicture: localStorage.getItem(\"profile-line\")\r\n      ? JSON.parse(localStorage.getItem(\"profile-line\")).pictureUrl\r\n      : DefaultImg,\r\n  };\r\n\r\n  toggleCollapse = (collapseID) => () =>\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\",\r\n    }));\r\n\r\n  closeCollapse = (collID) => () => {\r\n    const { collapseID } = this.state;\r\n    window.scrollTo(0, 0);\r\n    collapseID === collID && this.setState({ collapseID: \"\" });\r\n  };\r\n  InitailizeLiff = async () => {\r\n    await liff.init(\r\n      {\r\n        liffId: \"1655384297-BvEewepx\",\r\n      },\r\n      () => {\r\n        if (liff.isLoggedIn()) {\r\n          liff.getProfile().then((profile) => {\r\n            localStorage.setItem(\"profile-line\", JSON.stringify(profile));\r\n            this.setState({\r\n              displayName: profile.displayName,\r\n              urlPicture: profile.pictureUrl,\r\n            });\r\n          });\r\n        } else {\r\n          alert(\"No login!\");\r\n        }\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  };\r\n  componentDidMount() {}\r\n  render() {\r\n    const overlay = (\r\n      <div\r\n        id=\"sidenav-overlay\"\r\n        style={{ backgroundColor: \"transparent\" }}\r\n        onClick={this.toggleCollapse(\"mainNavbarCollapse\")}\r\n      />\r\n    );\r\n\r\n    const { collapseID, displayName, urlPicture } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <div className=\"flyout\">\r\n          <MDBNavbar\r\n            color=\"red accent-3\"\r\n            dark\r\n            expand=\"md\"\r\n            fixed=\"top\"\r\n            scrolling\r\n          >\r\n            <MDBNavbarBrand\r\n              href=\"/reh-1meeting\"\r\n              className=\"py-0 font-weight-bold\"\r\n            >\r\n              <strong className=\"align-middle\">REH 1Meeting</strong>&nbsp;\r\n              <strong style={{ fontSize: \"12px\" }}>{\"v.\" + pkgVersion}</strong>\r\n            </MDBNavbarBrand>\r\n            <MDBNavbarToggler\r\n              onClick={this.toggleCollapse(\"mainNavbarCollapse\")}\r\n            />\r\n            <MDBCollapse id=\"mainNavbarCollapse\" isOpen={collapseID} navbar>\r\n              <MDBNavbarNav right>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    exact\r\n                    to=\"/reh-1meeting/meeting-history\"\r\n                    onClick={this.closeCollapse(\"mainNavbarCollapse\")}\r\n                  >\r\n                    <strong>ประวัติเข้าประชุม</strong>\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    exact\r\n                    to=\"/reh-1meeting/profile\"\r\n                    onClick={this.closeCollapse(\"mainNavbarCollapse\")}\r\n                  >\r\n                    <strong>{displayName}</strong>\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n              </MDBNavbarNav>\r\n            </MDBCollapse>\r\n          </MDBNavbar>\r\n          {collapseID && overlay}\r\n          <main style={{ marginTop: \"4rem\" }}>\r\n            <div className=\"mt-2 mr-2\" style={{ textAlign: \"right\" }}>\r\n              <Link\r\n                to=\"/reh-1meeting/profile\"\r\n                style={{ fontSize: \"14px\", cursor: \"pointer\" }}\r\n              >\r\n                <img\r\n                  src={urlPicture}\r\n                  width=\"45\"\r\n                  height=\"45\"\r\n                  alt=\"\"\r\n                  className=\"rounded-circle mr-1\"\r\n                />\r\n                {displayName}\r\n              </Link>\r\n            </div>\r\n            <Routes />\r\n          </main>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'));\r\n\r\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/default-image.440b9b23.jpg\";","exports.main_config = {\r\n  APP_URL: \"https://api-reh-1meeting-forward.herokuapp.com\",\r\n  TOKEN_APP: \"d7073ee6cc586814598f5e91c398ccf0a2976b91927b9d55190fa12ac95acd0a85d7eff3050bb94e05c3263b7b3d7faad64b5f1ab4c8d972379551ad0789aeaf\"\r\n};\r\n// exports.main_config = {\r\n//   APP_URL: \"http://192.168.99.181:9000/api/v1\",\r\n//   TOKEN_APP: \"d7073ee6cc586814598f5e91c398ccf0a2976b91927b9d55190fa12ac95acd0a85d7eff3050bb94e05c3263b7b3d7faad64b5f1ab4c8d972379551ad0789aeaf\"\r\n// };\r\n"],"sourceRoot":""}