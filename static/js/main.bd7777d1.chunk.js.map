{"version":3,"sources":["pages/HomePage.js","pages/ProfilePage.js","pages/RegisterPage.js","Routes.js","App.js","registerServiceWorker.js","index.js","assets/default-image.jpg","config.js"],"names":["today","Date","getTime","DateTimeThai","datetime","format","date","split","date_str","time_str","new_date","10","11","12","parseInt","new_time","HomePage","props","useState","userid","setUserID","docno","setDocno","startdate","setStartDate","starttime","setStartTime","enddate","setEndDate","endtime","setEndTime","meetingHost","setMeetingHost","meetingRoom","setMeetingRoom","humanAmount","setHumanAmount","humenTotal","setHumanTotal","isMeeting","setIsMeeting","isRegister","setIsRegister","isCheckIn","setIsCheckIn","isCheckOut","setIsCheckOut","isTimeMeeting","setIsTimeMeeting","pname","setPname","fname","setFname","lname","setLname","idcard","setIDcard","email","setEmail","position","setPosition","department","setDepartment","government","setGovernment","phone","setPhoneNumber","CheckUser","userId","a","base_url","config","main_config","APP_URL","header","Authorization","TOKEN_APP","axios","post","headers","then","resp","data","length","localStorage","setItem","JSON","stringify","data_info","removeItem","catch","error","console","log","InitailizeLiff","liff","init","liffId","isLoggedIn","getProfile","profile","str","location","search","params","meetingid","get","code","startDate","start_date","endDate","end_date","meeting_host_name","meeting_name","human_amount","total","total_meeting","getMeeting","userID","check_in_date","check_out_date","getCheckInCheckOut","err","useEffect","color","className","style","height","type","duration","md","fontSize","gradient","size","onClick","Swal","fire","title","text","check_date","showDenyButton","showCancelButton","showCloseButton","confirmButtonText","result","isConfirmed","window","reload","msg","icon","checkIn","checkOut","onSubmit","event","preventDefault","target","formData","token","htmlFor","onChange","value","name","required","id","readOnly","floating","rounded","paddingBottom","jwt","require","ProfilePage","Component","constructor","super","this","LoadDataUser","setState","displayName","urlPicture","pictureUrl","alert","state","isChange","getItem","parse","DefaultImg","handleChange","bind","submitHandler","names","val","showConfirmButton","setTimeout","user","decoded","verify","history","push","componentDidMount","render","src","width","alt","RegisterPage","useHistory","Routes","React","exact","path","component","pkgVersion","version","App","collapseID","toggleCollapse","prevState","closeCollapse","collID","scrollTo","overlay","backgroundColor","dark","expand","fixed","scrolling","href","isOpen","navbar","right","to","marginTop","textAlign","cursor","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.bd7777d1.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport liff from \"@line/liff\";\r\nimport config from \"../config\";\r\nimport {\r\n  MDBEdgeHeader,\r\n  MDBFreeBird,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBCardBody,\r\n  MDBAnimation,\r\n  MDBBtn,\r\n  MDBIcon,\r\n} from \"mdbreact\";\r\nimport \"./HomePage.css\";\r\nlet today = new Date().getTime();\r\nfunction DateTimeThai(datetime, format) {\r\n  let thmonth = {\r\n    \"01\": \"มกราคม\",\r\n    \"02\": \"กุมภาพันธ์\",\r\n    \"03\": \"มีนาคม\",\r\n    \"04\": \"เมษายน\",\r\n    \"05\": \"พฤษภาคม\",\r\n    \"06\": \"มิถุนายน\",\r\n    \"07\": \"กรกฎาคม\",\r\n    \"08\": \"สิงหาคม\",\r\n    \"09\": \"กันยายน\",\r\n    10: \"ตุลาคม\",\r\n    11: \"พฤศจิกายน\",\r\n    12: \"ธันวาคม\",\r\n  };\r\n  let createdDate = \"\";\r\n  let date = datetime.split(\" \");\r\n  let date_str = date[0].split(\"-\");\r\n  let time_str = date[1].split(\":\");\r\n  let new_date = `${date_str[2]} ${thmonth[date_str[1]]} ${\r\n    parseInt(date_str[0]) + 543\r\n  }`;\r\n  let new_time = `${time_str[0]}:${time_str[1]}น.`;\r\n  if (format === 1) {\r\n    createdDate = new_date;\r\n  } else if (format === 2) {\r\n    createdDate = new_time;\r\n  } else {\r\n    createdDate = new_date + \" \" + new_time;\r\n  }\r\n  return createdDate;\r\n}\r\n\r\nconst HomePage = (props) => {\r\n  // const history = useHistory();\r\n  const [userid, setUserID] = useState(\"U0ce66a9d268b3f1d81d04b30631acc87\");\r\n  const [docno, setDocno] = useState(\"\");\r\n  const [startdate, setStartDate] = useState(\"\");\r\n  const [starttime, setStartTime] = useState(\"\");\r\n  const [enddate, setEndDate] = useState(\"\");\r\n  const [endtime, setEndTime] = useState(\"\");\r\n  const [meetingHost, setMeetingHost] = useState(\"\");\r\n  const [meetingRoom, setMeetingRoom] = useState(\"\");\r\n  const [humanAmount, setHumanAmount] = useState(\"\");\r\n  const [humenTotal, setHumanTotal] = useState(\"\");\r\n  const [isMeeting, setIsMeeting] = useState(false);\r\n  const [isRegister, setIsRegister] = useState(false);\r\n  const [isCheckIn, setIsCheckIn] = useState(\"\");\r\n  const [isCheckOut, setIsCheckOut] = useState(\"\");\r\n  const [isTimeMeeting, setIsTimeMeeting] = useState(0);\r\n\r\n  const [pname, setPname] = useState(\"\");\r\n  const [fname, setFname] = useState(\"\");\r\n  const [lname, setLname] = useState(\"\");\r\n  const [idcard, setIDcard] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [position, setPosition] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [government, setGovernment] = useState(\"โรงพยาบาลร้อยเอ็ด\");\r\n  const [phone, setPhoneNumber] = useState(\"\");\r\n\r\n  const CheckUser = async (userId) => {\r\n    const base_url = `${config.main_config.APP_URL}/user`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    await axios\r\n      .post(base_url, { userid: userId }, { headers: header })\r\n      .then((resp) => {\r\n        // console.log(resp.data);\r\n        if (resp.data.data.length > 0) {\r\n          localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify(resp.data.data[0].data_info)\r\n          );\r\n          setIsRegister(true);\r\n        } else {\r\n          setIsRegister(false);\r\n          localStorage.removeItem(\"user\");\r\n          localStorage.removeItem(\"userid\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    const formData = {\r\n      userid: userid,\r\n      idcard: idcard,\r\n      pname: pname,\r\n      fname: fname,\r\n      lname: lname,\r\n      email: email,\r\n      position: position,\r\n      department: department,\r\n      government: government,\r\n      phone: phone,\r\n    };\r\n    const base_url = `${config.main_config.APP_URL}/user/register`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios.post(base_url, formData, { headers: header }).then((resp) => {\r\n      if (resp.data.code === 200) {\r\n        localStorage.setItem(\"user\", JSON.stringify(resp.data.data.token));\r\n        Swal.fire({\r\n          title: \"ลงทะเบียนเรียบร้อย\",\r\n          text: \"กรุณารอสักครู่...\",\r\n          icon: \"success\",\r\n          showDenyButton: false,\r\n          showCancelButton: false,\r\n          showCloseButton: false,\r\n          confirmButtonText: `ตกลง`,\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            window.location.reload();\r\n          }\r\n        });\r\n        // Swal.fire({\r\n        //   title: \"บันทึกข้อมูลเรียบร้อย\",\r\n        //   text: \"กรุณารอสักครู่...\",\r\n        //   icon: \"success\",\r\n        // });\r\n        // setIsRegister(true);\r\n        // history.push(\"/reh-1meeting/\");\r\n      } else if (resp.data.code === 400) {\r\n        Swal.fire({\r\n          title: \"แจ้งเตือน\",\r\n          text: resp.data.msg,\r\n          icon: \"warning\",\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: \"แจ้งเตือน\",\r\n          text: resp.data.error,\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n  const getMeeting = (meetingid) => {\r\n    const docno = meetingid;\r\n    const base_url = `${config.main_config.APP_URL}/getMeetingByDocno/${docno}`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios\r\n      .get(base_url, { headers: header })\r\n      .then((resp) => {\r\n        if (resp.data.code === 200) {\r\n          let startDate = new Date(resp.data.data[0].start_date).getTime();\r\n          let endDate = new Date(resp.data.data[0].end_date).getTime();\r\n          if ((startDate - today) / 1000 > 1800) {\r\n            setIsTimeMeeting(1);\r\n          }\r\n          if (today > endDate) {\r\n            setIsTimeMeeting(2);\r\n          }\r\n          setDocno(resp.data.data[0].docno);\r\n          setStartDate(DateTimeThai(resp.data.data[0].start_date, 1));\r\n          setStartTime(DateTimeThai(resp.data.data[0].start_date, 2));\r\n          setEndDate(DateTimeThai(resp.data.data[0].end_date, 1));\r\n          setEndTime(DateTimeThai(resp.data.data[0].end_date, 2));\r\n          setMeetingHost(resp.data.data[0].meeting_host_name);\r\n          setMeetingRoom(resp.data.data[0].meeting_name);\r\n          setHumanAmount(resp.data.data[0].human_amount);\r\n          setHumanTotal(resp.data.total[0].total_meeting);\r\n          setIsRegister(true);\r\n          localStorage.setItem(\"isMeeting\", \"true\");\r\n        } else if (resp.data.code === 400) {\r\n          localStorage.setItem(\"isMeeting\", \"false\");\r\n          setIsMeeting(false);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const checkIn = (userid, meetingid) => {\r\n    const base_url = `${config.main_config.APP_URL}/saveCheckIn`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios\r\n      .post(base_url, { userid: userid, docno: meetingid }, { headers: header })\r\n      .then((resp) => {\r\n        if (resp.data.code === 200) {\r\n          Swal.fire({\r\n            title: \"เช็คอินเข้าประชุมเรียบร้อย\",\r\n            text: `เวลา ${DateTimeThai(\r\n              resp.data.check_date[0].check_in_date,\r\n              3\r\n            )}`,\r\n            showDenyButton: false,\r\n            showCancelButton: false,\r\n            showCloseButton: false,\r\n            confirmButtonText: `ตกลง`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              window.location.reload();\r\n            }\r\n          });\r\n        } else if (resp.data.code === 400) {\r\n          Swal.fire({\r\n            title: \"แจ้งเตือน\",\r\n            text: resp.data.msg,\r\n            icon: \"error\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const checkOut = (userid, meetingid) => {\r\n    const base_url = `${config.main_config.APP_URL}/saveCheckOut`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios\r\n      .post(base_url, { userid: userid, docno: meetingid }, { headers: header })\r\n      .then((resp) => {\r\n        if (resp.data.code === 200) {\r\n          Swal.fire({\r\n            title: \"เช็คเอ้าท์ออกจากประชุมเรียบร้อย\",\r\n            text: `เวลา ${DateTimeThai(\r\n              resp.data.check_date[0].check_out_date,\r\n              3\r\n            )}`,\r\n            showDenyButton: false,\r\n            showCancelButton: false,\r\n            showCloseButton: false,\r\n            confirmButtonText: `ตกลง`,\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              window.location.reload();\r\n            }\r\n          });\r\n        } else if (resp.data.code === 400) {\r\n          Swal.fire({\r\n            title: \"แจ้งเตือน\",\r\n            text: resp.data.msg,\r\n            icon: \"error\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const getCheckInCheckOut = (userID, meetingid) => {\r\n    const base_url = `${config.main_config.APP_URL}/getCheckInCheckOut/${userID}/${meetingid}`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios\r\n      .get(base_url, { headers: header })\r\n      .then((resp) => {\r\n        if (resp.data.code === 200) {\r\n          setIsCheckIn(\r\n            resp.data.data[0].check_in_date !== null\r\n              ? DateTimeThai(resp.data.data[0].check_in_date, 3)\r\n              : \"\"\r\n          );\r\n          setIsCheckOut(\r\n            resp.data.data[0].check_out_date !== null\r\n              ? DateTimeThai(resp.data.data[0].check_out_date, 3)\r\n              : \"\"\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const InitailizeLiff = () => {\r\n    CheckUser(\"U0ce66a9d268b3f1d81d04b30631acc87\");\r\n    liff.init(\r\n      {\r\n        liffId: \"1655384297-BvEewepx\",\r\n      },\r\n      () => {\r\n        if (liff.isLoggedIn()) {\r\n          liff.getProfile().then((profile) => {\r\n            localStorage.setItem(\"profile-line\", JSON.stringify(profile));\r\n            setUserID(profile.userId);\r\n            CheckUser(profile.userId);\r\n            const queryString = props.location.search;\r\n            let str = queryString.split(\"=\");\r\n            const params = str.length > 0 ? str[1] : \"\";\r\n            if (params !== \"\") {\r\n              getMeeting(params);\r\n              getCheckInCheckOut(profile.userId, params);\r\n            }\r\n          });\r\n        } \r\n        // else {\r\n        //   alert(\"No login!\");\r\n        // }\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n    // const profile = localStorage.getItem(\"profile-line\");\r\n    // const getProfile = JSON.parse(profile);\r\n    // if (getProfile !== null) {\r\n    //   setUserID(getProfile.userId);\r\n    //   CheckUser(getProfile.userId);\r\n    // }else{\r\n    //   localStorage.removeItem(\"profile-line\");\r\n    // }\r\n  };\r\n\r\n  useEffect(() => {\r\n    InitailizeLiff();\r\n  });\r\n  return (\r\n    <div>\r\n      <MDBEdgeHeader\r\n        color=\"red lighten-5\"\r\n        className=\"sectionPage\"\r\n        style={{ height: 100 }}\r\n      />\r\n      <div className=\"mt-3 mb-5\">\r\n        <MDBAnimation type=\"zoomIn\" duration=\"500ms\">\r\n          <MDBFreeBird>\r\n            <MDBRow>\r\n              <MDBCol\r\n                md=\"10\"\r\n                className=\"mx-auto float-none white z-depth-1 py-2 px-2\"\r\n              >\r\n                <MDBCardBody>\r\n                  {/* {\"USERID : \" + userid} */}\r\n                  <MDBCol className={isMeeting || !isRegister ? \"hidden\" : \"\"}>\r\n                    <h6 className=\"h6-responsive mb-4 text-center\">\r\n                      <strong className=\"font-weight-bold text-primary\">\r\n                        กรุณา Scan QR Code เพื่อเข้าร่วมประชุม\r\n                      </strong>\r\n                    </h6>\r\n                  </MDBCol>\r\n                  <div className={!isMeeting || !isRegister ? \"hidden\" : \"\"}>\r\n                    <MDBCol md=\"12\">\r\n                      <blockquote className=\"blockquote bq-primary\">\r\n                        <p className=\"bq-title\" style={{ fontSize: \"16px\" }}>\r\n                          {meetingRoom}\r\n                        </p>\r\n                        <strong style={{ fontSize: \"16px\" }}>\r\n                          หัวข้อ {meetingHost}\r\n                        </strong>\r\n                        <div>\r\n                          <strong style={{ fontSize: \"14px\" }}>\r\n                            {startdate === enddate\r\n                              ? \"วันที่ \" + startdate\r\n                              : \"ระหว่างวันที่ \" + startdate + \" - \" + enddate}\r\n                          </strong>\r\n                        </div>\r\n                        <div>\r\n                          <small style={{ fontSize: \"14px\" }}>\r\n                            เวลา {starttime} - {endtime}\r\n                          </small>\r\n                        </div>\r\n                        <div>\r\n                          <small style={{ fontSize: \"14px\" }}>\r\n                            เข้าประชุมแล้ว {humenTotal}/{humanAmount} คน\r\n                          </small>\r\n                        </div>\r\n                      </blockquote>\r\n                    </MDBCol>\r\n                    <MDBCol className=\"text-center\">\r\n                      <div>\r\n                        <span\r\n                          className={\r\n                            isTimeMeeting === 0\r\n                              ? \"hidden\"\r\n                              : isTimeMeeting === 1\r\n                              ? \"text-primary\"\r\n                              : \"text-danger\"\r\n                          }\r\n                        >\r\n                          {isTimeMeeting === 1\r\n                            ? \"สามารถเช็คอินเข้าห้องประชุมได้ก่อน 30 นาที\"\r\n                            : \"จบการประชุมแล้ว\"}\r\n                        </span>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-success\">\r\n                          {isCheckIn !== \"\" ? \"เช็คอินเมื่อ \" + isCheckIn : \"\"}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"mt-3\">\r\n                        <span className=\"text-danger\">\r\n                          {isCheckOut !== \"\"\r\n                            ? \"เช็คเอาท์เมื่อ \" + isCheckOut\r\n                            : \"\"}\r\n                        </span>\r\n                      </div>\r\n                      <div\r\n                        className={\r\n                          isTimeMeeting === 1 || isTimeMeeting === 2\r\n                            ? \"hidden\"\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <MDBBtn\r\n                          gradient=\"blue\"\r\n                          size=\"sm\"\r\n                          className={isCheckIn !== \"\" ? \"hidden\" : \"\"}\r\n                          onClick={() => checkIn(userid, docno)}\r\n                        >\r\n                          Check-in\r\n                        </MDBBtn>\r\n                        <MDBBtn\r\n                          size=\"sm\"\r\n                          color=\"danger\"\r\n                          className={isCheckOut !== \"\" ? \"hidden\" : \"\"}\r\n                          onClick={() => checkOut(userid, docno)}\r\n                        >\r\n                          Check-out\r\n                        </MDBBtn>\r\n                      </div>\r\n                    </MDBCol>\r\n                  </div>\r\n                  <MDBCol md=\"12\" className={isRegister ? \"hidden\" : \"\"}>\r\n                    <h5 className=\"text-primary\">ลงทะเบียนผู้ใช้งานใหม่</h5>\r\n                    <form className=\"needs-validation\" onSubmit={submitHandler}>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"pname\" className=\"grey-text\">\r\n                            คำนำหน้า <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setPname(text.target.value)}\r\n                            type=\"text\"\r\n                            value={pname}\r\n                            className=\"form-control\"\r\n                            name=\"pname\"\r\n                            required\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"fname\" className=\"grey-text\">\r\n                            ชื่อ <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setFname(text.target.value)}\r\n                            type=\"text\"\r\n                            value={fname}\r\n                            className=\"form-control\"\r\n                            name=\"fname\"\r\n                            required\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"lname\" className=\"grey-text\">\r\n                            นามสกุล <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setLname(text.target.value)}\r\n                            type=\"text\"\r\n                            value={lname}\r\n                            className=\"form-control\"\r\n                            required\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"email\" className=\"grey-text\">\r\n                            เลขบัตรประชาชน{\" \"}\r\n                            <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setIDcard(text.target.value)}\r\n                            type=\"number\"\r\n                            value={idcard}\r\n                            className=\"form-control\"\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"email\" className=\"grey-text\">\r\n                            อีเมล <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setEmail(text.target.value)}\r\n                            type=\"email\"\r\n                            value={email}\r\n                            className=\"form-control\"\r\n                          />\r\n                          <small\r\n                            id=\"emailHelp\"\r\n                            className=\"form-text text-muted\"\r\n                          >\r\n                            อีเมลที่สามารถติดต่อได้จริง\r\n                          </small>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"position\" className=\"grey-text\">\r\n                            ตำแหน่ง <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setPosition(text.target.value)}\r\n                            type=\"text\"\r\n                            value={position}\r\n                            className=\"form-control\"\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"department\" className=\"grey-text\">\r\n                            หน่วยงาน <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) =>\r\n                              setDepartment(text.target.value)\r\n                            }\r\n                            type=\"text\"\r\n                            value={department}\r\n                            className=\"form-control\"\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"main_company\" className=\"grey-text\">\r\n                            ส่วนราชการ <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) =>\r\n                              setGovernment(text.target.value)\r\n                            }\r\n                            type=\"text\"\r\n                            value={government}\r\n                            className=\"form-control\"\r\n                            readOnly\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"phone_number\" className=\"grey-text\">\r\n                            เบอร์โทร\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) =>\r\n                              setPhoneNumber(text.target.value)\r\n                            }\r\n                            type=\"text\"\r\n                            value={phone}\r\n                            className=\"form-control\"\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBBtn gradient=\"blue\" type=\"submit\">\r\n                        บันทึก\r\n                      </MDBBtn>\r\n                    </form>\r\n                  </MDBCol>\r\n                </MDBCardBody>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBFreeBird>\r\n        </MDBAnimation>\r\n        <div className={isMeeting || !isRegister ? \"footer hidden\" : \"footer\"}>\r\n          <MDBCol className=\"text-center\">\r\n            <MDBBtn\r\n              floating=\"true\"\r\n              gradient=\"blue\"\r\n              rounded\r\n              color=\"danger\"\r\n              onClick={() =>\r\n                (window.location = \"https://line.me/R/nv/QRCodeReader\")\r\n              }\r\n            >\r\n              <MDBIcon icon=\"qrcode\" size=\"4x\" />\r\n              <br />\r\n              <strong className=\"ml-2\" style={{ paddingBottom: \"15px\" }}>\r\n                SCAN QR Code\r\n              </strong>\r\n            </MDBBtn>\r\n          </MDBCol>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  MDBEdgeHeader,\r\n  MDBFreeBird,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBCardBody,\r\n  MDBAnimation,\r\n  MDBBtn,\r\n} from \"mdbreact\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport config from \"../config\";\r\nimport liff from \"@line/liff\";\r\nimport \"./ProfilePage.css\";\r\nimport DefaultImg from \"../assets/default-image.jpg\";\r\nconst jwt = require(\"jsonwebtoken\");\r\nclass ProfilePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userid: \"\",\r\n      pname: \"\",\r\n      fname: \"\",\r\n      lname: \"\",\r\n      idcard: \"\",\r\n      email: \"\",\r\n      position: \"\",\r\n      department: \"\",\r\n      government: \"\",\r\n      phone: \"\",\r\n      isChange: false,\r\n      displayName: localStorage.getItem(\"profile-line\")\r\n        ? JSON.parse(localStorage.getItem(\"profile-line\")).displayName\r\n        : \"\",\r\n      urlPicture: localStorage.getItem(\"profile-line\")\r\n        ? JSON.parse(localStorage.getItem(\"profile-line\")).pictureUrl\r\n        : DefaultImg,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.LoadDataUser = this.LoadDataUser.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    let names = event.target.name;\r\n    let val = event.target.value;\r\n    this.setState({ [names]: val });\r\n  }\r\n  submitHandler(event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    const {\r\n      userid,\r\n      pname,\r\n      fname,\r\n      lname,\r\n      idcard,\r\n      email,\r\n      position,\r\n      department,\r\n      government,\r\n      phone,\r\n    } = this.state;\r\n    const formData = {\r\n      userid: userid,\r\n      idcard: idcard,\r\n      pname: pname,\r\n      fname: fname,\r\n      lname: lname,\r\n      email: email,\r\n      position: position,\r\n      department: department,\r\n      government: government,\r\n      phone: phone,\r\n    };\r\n    const base_url = `${config.main_config.APP_URL}/user/update`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios.post(base_url, formData, { headers: header }).then((resp) => {\r\n      if (resp.data.code === 200) {\r\n        localStorage.setItem(\"user\", JSON.stringify(resp.data.data.token));\r\n        localStorage.setItem(\"userid\", JSON.stringify(resp.data.data.userid));\r\n        Swal.fire({\r\n          title: \"แก้ไขข้อมูลเรียบร้อย\",\r\n          text: \"กรุณารอสักครู่...\",\r\n          icon: \"success\",\r\n          showConfirmButton: false,\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 1000);\r\n      } else if (resp.data.code === 400) {\r\n        Swal.fire({\r\n          title: \"แจ้งเตือน\",\r\n          text: resp.data.msg,\r\n          icon: \"warning\",\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: \"แจ้งเตือน\",\r\n          text: resp.data.error,\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    });\r\n  }\r\n  LoadDataUser() {\r\n    const user = localStorage.getItem(\"user\");\r\n    if (user) {\r\n      const decoded = jwt.verify(\r\n        JSON.parse(user),\r\n        config.main_config.TOKEN_APP\r\n      );\r\n      this.setState({\r\n        userid: decoded.userid,\r\n        pname: decoded.pname,\r\n        fname: decoded.fname,\r\n        lname: decoded.lname,\r\n        idcard: decoded.idcard,\r\n        email: decoded.email,\r\n        position: decoded.position,\r\n        department: decoded.department,\r\n        government: decoded.government,\r\n        phone: decoded.phone,\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/reh-1meeting/\");\r\n    }\r\n  }\r\n  InitailizeLiff = () => {\r\n    liff.init(\r\n      {\r\n        liffId: \"1655384297-BvEewepx\",\r\n      },\r\n      () => {\r\n        if (liff.isLoggedIn()) {\r\n          liff.getProfile().then((profile) => {\r\n            localStorage.setItem(\"profile-line\", JSON.stringify(profile));\r\n            this.LoadDataUser();\r\n            this.setState({\r\n              displayName: profile.displayName,\r\n              urlPicture: profile.pictureUrl\r\n            })\r\n          });\r\n        } else {\r\n          alert(\"No login!\");\r\n        }\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  };\r\n  componentDidMount() {\r\n    this.InitailizeLiff();\r\n  }\r\n  render() {\r\n    const { displayName, urlPicture } = this.state;\r\n    return (\r\n      <div>\r\n        <MDBEdgeHeader\r\n          color=\"red lighten-5\"\r\n          className=\"sectionPage\"\r\n          style={{ height: 100 }}\r\n        />\r\n        <div className=\"mt-3 mb-5\">\r\n          <MDBAnimation type=\"zoomIn\" duration=\"500ms\">\r\n            <MDBFreeBird>\r\n              <MDBRow>\r\n                <MDBCol\r\n                  md=\"10\"\r\n                  className=\"mx-auto float-none white z-depth-1 py-2 px-2\"\r\n                >\r\n                  <MDBCardBody>\r\n                    <MDBCol className=\"text-center\">\r\n                      <img\r\n                        src={urlPicture}\r\n                        width=\"150\"\r\n                        height=\"150\"\r\n                        alt=\"\"\r\n                        className=\"rounded-circle\"\r\n                      />\r\n                    </MDBCol>\r\n                    <MDBCol md=\"12\">\r\n                      <h4 className=\"font-weight-bold mt-2 mb-4 text-center\">\r\n                      {displayName}\r\n                      </h4>\r\n                      <h5 className=\"text-primary\">ข้อมูลส่วนตัว</h5>\r\n                      <form\r\n                        className=\"needs-validation\"\r\n                        onSubmit={this.submitHandler}\r\n                      >\r\n                        <MDBRow>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"pname\" className=\"grey-text\">\r\n                              คำนำหน้า <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.pname}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.pname}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"pname\"\r\n                              required\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"fname\" className=\"grey-text\">\r\n                              ชื่อ <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.fname}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.fname}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"fname\"\r\n                              required\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"lname\" className=\"grey-text\">\r\n                              นามสกุล <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.lname}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.lname}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"lname\"\r\n                              required\r\n                            />\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                        <MDBRow>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"email\" className=\"grey-text\">\r\n                              เลขบัตรประชาชน{\" \"}\r\n                              <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.idcard}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"number\"\r\n                              value={this.state.idcard}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"idcard\"\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"email\" className=\"grey-text\">\r\n                              อีเมล <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.email}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"email\"\r\n                              value={this.state.email}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"email\"\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"position\" className=\"grey-text\">\r\n                              ตำแหน่ง <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.position}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.position}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"position\"\r\n                            />\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                        <MDBRow>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"department\" className=\"grey-text\">\r\n                              หน่วยงาน <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.department}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.department}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"department\"\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"main_company\" className=\"grey-text\">\r\n                              ส่วนราชการ <span className=\"text-danger\">*</span>\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.government}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.government}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"government\"\r\n                            />\r\n                          </MDBCol>\r\n                          <MDBCol md=\"4\" className=\"mb-3\">\r\n                            <label htmlFor=\"phone_number\" className=\"grey-text\">\r\n                              เบอร์โทร\r\n                            </label>\r\n                            <div\r\n                              className={this.state.isChange ? \"hidden\" : \"\"}\r\n                            >\r\n                              {this.state.phone}\r\n                            </div>\r\n                            <input\r\n                              onChange={this.handleChange}\r\n                              type=\"text\"\r\n                              value={this.state.phone}\r\n                              className={`form-control ${\r\n                                this.state.isChange ? \"\" : \"hidden\"\r\n                              }`}\r\n                              name=\"phone\"\r\n                            />\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                        {this.state.isChange === true ? (\r\n                          <MDBBtn gradient=\"blue\" type=\"submit\">\r\n                            บันทึกแก้ไข\r\n                          </MDBBtn>\r\n                        ) : (\r\n                          <strong\r\n                            onClick={() => this.setState({ isChange: true })}\r\n                            className=\"btn btn-outline-success\"\r\n                          >\r\n                            แก้ไขข้อมูล\r\n                          </strong>\r\n                        )}\r\n                      </form>\r\n                    </MDBCol>\r\n                  </MDBCardBody>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBFreeBird>\r\n          </MDBAnimation>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfilePage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport config from \"../config\";\r\nimport liff from \"@line/liff\";\r\nimport {\r\n  MDBEdgeHeader,\r\n  MDBFreeBird,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBCardBody,\r\n  MDBAnimation,\r\n  MDBBtn,\r\n} from \"mdbreact\";\r\n\r\nconst RegisterPage = () => {\r\n  const history = useHistory();\r\n  const [userid, setUserID] = useState(\"0\");\r\n  const [pname, setPname] = useState(\"\");\r\n  const [fname, setFname] = useState(\"\");\r\n  const [lname, setLname] = useState(\"\");\r\n  const [idcard, setIDcard] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [position, setPosition] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n  const [government, setGovernment] = useState(\"โรงพยาบาลร้อยเอ็ด\");\r\n  const [phone, setPhoneNumber] = useState(\"\");\r\n\r\n  const CheckUser = async (userId) => {\r\n    const base_url = `${config.main_config.APP_URL}/user`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    await axios\r\n      .post(base_url, { userid: userId }, { headers: header })\r\n      .then((resp) => {\r\n        if (resp.data.data.length > 0) {\r\n          localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify(resp.data.data[0].data_info)\r\n          );\r\n          history.push(\"/reh-1meeting/\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    const formData = {\r\n      userid: userid,\r\n      idcard: idcard,\r\n      pname: pname,\r\n      fname: fname,\r\n      lname: lname,\r\n      email: email,\r\n      position: position,\r\n      department: department,\r\n      government: government,\r\n      phone: phone,\r\n    };\r\n    const base_url = `${config.main_config.APP_URL}/user/register`;\r\n    const header = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${config.main_config.TOKEN_APP}`,\r\n    };\r\n    axios.post(base_url, formData, { headers: header }).then((resp) => {\r\n      if (resp.data.code === 200) {\r\n        localStorage.setItem(\"user\", JSON.stringify(resp.data.data.token));\r\n        Swal.fire({\r\n          title: \"บันทึกข้อมูลเรียบร้อย\",\r\n          text: \"กรุณารอสักครู่...\",\r\n          icon: \"success\",\r\n        });\r\n        history.push(\"/reh-1meeting/\");\r\n      } else if (resp.data.code === 400) {\r\n        Swal.fire({\r\n          title: \"แจ้งเตือน\",\r\n          text: resp.data.msg,\r\n          icon: \"warning\",\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: \"แจ้งเตือน\",\r\n          text: resp.data.error,\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n  const InitailizeLiff = () => {\r\n    liff.init(\r\n      {\r\n        liffId: \"1655384297-9EroMoWn\",\r\n      },\r\n      () => {\r\n        if (liff.isLoggedIn()) {\r\n          liff.getProfile().then((profile) => {\r\n            setUserID(profile.userId);\r\n            CheckUser(profile.userId);\r\n          });\r\n        }else{\r\n          alert(\"No login!\")\r\n        }\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n    // const profile = localStorage.getItem(\"profile-line\");\r\n    // const getProfile = JSON.parse(profile);\r\n    // if (getProfile !== null) {\r\n    //   setUserID(getProfile.userId);\r\n    //   CheckUser(getProfile.userId);\r\n    // }else{\r\n    //   localStorage.removeItem(\"profile-line\");\r\n    // }\r\n  };\r\n  useEffect(() => {\r\n    InitailizeLiff();\r\n  });\r\n  return (\r\n    <div>\r\n      <MDBEdgeHeader\r\n        color=\"red lighten-5\"\r\n        className=\"sectionPage\"\r\n        style={{ height: 100 }}\r\n      />\r\n      <div className=\"mt-3 mb-5\">\r\n        <MDBAnimation type=\"zoomIn\" duration=\"500ms\">\r\n          <MDBFreeBird>\r\n            <MDBRow>\r\n              <MDBCol\r\n                md=\"10\"\r\n                className=\"mx-auto float-none white z-depth-1 py-2 px-2\"\r\n              >\r\n                <MDBCardBody>\r\n                  {/* {\"USERID : \" + userid} */}\r\n                  <MDBCol md=\"12\">\r\n                    <h5 className=\"text-primary\">ลงทะเบียนผู้ใช้งานใหม่</h5>\r\n                    <form className=\"needs-validation\" onSubmit={submitHandler}>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"pname\" className=\"grey-text\">\r\n                            คำนำหน้า <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setPname(text.target.value)}\r\n                            type=\"text\"\r\n                            value={pname}\r\n                            className=\"form-control\"\r\n                            name=\"pname\"\r\n                            required\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"fname\" className=\"grey-text\">\r\n                            ชื่อ <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setFname(text.target.value)}\r\n                            type=\"text\"\r\n                            value={fname}\r\n                            className=\"form-control\"\r\n                            name=\"fname\"\r\n                            required\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"lname\" className=\"grey-text\">\r\n                            นามสกุล <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setLname(text.target.value)}\r\n                            type=\"text\"\r\n                            value={lname}\r\n                            className=\"form-control\"\r\n                            required\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"email\" className=\"grey-text\">\r\n                            เลขบัตรประชาชน{\" \"}\r\n                            <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setIDcard(text.target.value)}\r\n                            type=\"number\"\r\n                            value={idcard}\r\n                            className=\"form-control\"\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"email\" className=\"grey-text\">\r\n                            อีเมล <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setEmail(text.target.value)}\r\n                            type=\"email\"\r\n                            value={email}\r\n                            className=\"form-control\"\r\n                          />\r\n                          <small\r\n                            id=\"emailHelp\"\r\n                            className=\"form-text text-muted\"\r\n                          >\r\n                            อีเมลที่สามารถติดต่อได้จริง\r\n                          </small>\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"position\" className=\"grey-text\">\r\n                            ตำแหน่ง <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) => setPosition(text.target.value)}\r\n                            type=\"text\"\r\n                            value={position}\r\n                            className=\"form-control\"\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBRow>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"department\" className=\"grey-text\">\r\n                            หน่วยงาน <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) =>\r\n                              setDepartment(text.target.value)\r\n                            }\r\n                            type=\"text\"\r\n                            value={department}\r\n                            className=\"form-control\"\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"main_company\" className=\"grey-text\">\r\n                            ส่วนราชการ <span className=\"text-danger\">*</span>\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) =>\r\n                              setGovernment(text.target.value)\r\n                            }\r\n                            type=\"text\"\r\n                            value={government}\r\n                            className=\"form-control\"\r\n                            readOnly\r\n                          />\r\n                        </MDBCol>\r\n                        <MDBCol md=\"4\" className=\"mb-3\">\r\n                          <label htmlFor=\"phone_number\" className=\"grey-text\">\r\n                            เบอร์โทร\r\n                          </label>\r\n                          <input\r\n                            onChange={(text) =>\r\n                              setPhoneNumber(text.target.value)\r\n                            }\r\n                            type=\"text\"\r\n                            value={phone}\r\n                            className=\"form-control\"\r\n                          />\r\n                        </MDBCol>\r\n                      </MDBRow>\r\n                      <MDBBtn gradient=\"blue\" type=\"submit\">\r\n                        บันทึก\r\n                      </MDBBtn>\r\n                    </form>\r\n                  </MDBCol>\r\n                </MDBCardBody>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBFreeBird>\r\n        </MDBAnimation>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport { Route, Switch} from 'react-router-dom';\r\n\r\nimport HomePage from './pages/HomePage';\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport RegisterPage from './pages/RegisterPage';\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path='/' component={HomePage} />\r\n        <Route exact path='/reh-1meeting' component={HomePage} />\r\n        <Route exact path='/reh-1meeting/profile' component={ProfilePage} />\r\n        <Route exact path='/reh-1meeting/register' component={RegisterPage} />\r\n        <Route\r\n          render={function() {\r\n            return <h1>Page Not Found</h1>;\r\n          }}\r\n        />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n} from \"mdbreact\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport liff from \"@line/liff\";\r\nimport DefaultImg from \"./assets/default-image.jpg\";\r\nimport Routes from \"./Routes\";\r\nconst pkgVersion = require(\"../package.json\").version;\r\n// async function main() {\r\n//   try {\r\n//     if (!liff.isInClient() && liff.isLoggedIn()) {\r\n//       liff.getProfile().then((profile) => {\r\n//         localStorage.setItem(\"profile-line\", JSON.stringify(profile));\r\n//       });\r\n//     }\r\n//     await liff.init(\r\n//       {\r\n//         liffId: \"1655384297-BvEewepx\",\r\n//       },\r\n//       () => {\r\n//         // if (liff.isLoggedIn()) {\r\n//         //   liff.getProfile().then((profile) => {\r\n//         //     alert(profile.userId);\r\n//         //   });\r\n//         // }\r\n//       },\r\n//       (err) => console.log(err)\r\n//     );\r\n//   } catch (error) {\r\n//     console.log(\"ERROR\"+error);\r\n//   }\r\n// }\r\nclass App extends Component {\r\n  state = {\r\n    collapseID: \"\",\r\n    displayName: localStorage.getItem(\"profile-line\")\r\n      ? JSON.parse(localStorage.getItem(\"profile-line\")).displayName\r\n      : \"\",\r\n    urlPicture: localStorage.getItem(\"profile-line\")\r\n      ? JSON.parse(localStorage.getItem(\"profile-line\")).pictureUrl\r\n      : DefaultImg,\r\n  };\r\n\r\n  toggleCollapse = (collapseID) => () =>\r\n    this.setState((prevState) => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\",\r\n    }));\r\n\r\n  closeCollapse = (collID) => () => {\r\n    const { collapseID } = this.state;\r\n    window.scrollTo(0, 0);\r\n    collapseID === collID && this.setState({ collapseID: \"\" });\r\n  };\r\n  InitailizeLiff = () => {\r\n    liff.init(\r\n      {\r\n        liffId: \"1655384297-BvEewepx\",\r\n      },\r\n      () => {\r\n        if (liff.isLoggedIn()) {\r\n          liff.getProfile().then((profile) => {\r\n            localStorage.setItem(\"profile-line\", JSON.stringify(profile));\r\n            this.setState({\r\n              displayName: profile.displayName,\r\n              urlPicture: profile.pictureUrl\r\n            })\r\n          });\r\n        } else {\r\n          alert(\"No login!\");\r\n        }\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  };\r\n  componentDidMount() {}\r\n  render() {\r\n    const overlay = (\r\n      <div\r\n        id=\"sidenav-overlay\"\r\n        style={{ backgroundColor: \"transparent\" }}\r\n        onClick={this.toggleCollapse(\"mainNavbarCollapse\")}\r\n      />\r\n    );\r\n\r\n    const { collapseID, displayName, urlPicture } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <div className=\"flyout\">\r\n          <MDBNavbar\r\n            color=\"red accent-3\"\r\n            dark\r\n            expand=\"md\"\r\n            fixed=\"top\"\r\n            scrolling\r\n          >\r\n            <MDBNavbarBrand\r\n              href=\"/reh-1meeting\"\r\n              className=\"py-0 font-weight-bold\"\r\n            >\r\n              <strong className=\"align-middle\">REH 1Meeting</strong>&nbsp;\r\n              <strong style={{ fontSize: \"12px\" }}>{\"v.\" + pkgVersion}</strong>\r\n            </MDBNavbarBrand>\r\n            <MDBNavbarToggler\r\n              onClick={this.toggleCollapse(\"mainNavbarCollapse\")}\r\n            />\r\n            <MDBCollapse id=\"mainNavbarCollapse\" isOpen={collapseID} navbar>\r\n              <MDBNavbarNav right>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    exact\r\n                    to=\"/reh-1meeting/meeting-history\"\r\n                    onClick={this.closeCollapse(\"mainNavbarCollapse\")}\r\n                  >\r\n                    <strong>ประวัติเข้าประชุม</strong>\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink\r\n                    exact\r\n                    to=\"/reh-1meeting/profile\"\r\n                    onClick={this.closeCollapse(\"mainNavbarCollapse\")}\r\n                  >\r\n                    <strong>{displayName}</strong>\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n              </MDBNavbarNav>\r\n            </MDBCollapse>\r\n          </MDBNavbar>\r\n          {collapseID && overlay}\r\n          <main style={{ marginTop: \"4rem\" }}>\r\n            <div className=\"mt-2 mr-2\" style={{ textAlign: \"right\" }}>\r\n              <Link\r\n                to=\"/reh-1meeting/profile\"\r\n                style={{ fontSize: \"14px\", cursor: \"pointer\" }}\r\n              >\r\n                <img\r\n                  src={urlPicture}\r\n                  width=\"45\"\r\n                  height=\"45\"\r\n                  alt=\"\"\r\n                  className=\"rounded-circle mr-1\"\r\n                />\r\n                {displayName}\r\n              </Link>\r\n            </div>\r\n            <Routes />\r\n          </main>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'));\r\n\r\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/default-image.440b9b23.jpg\";","exports.main_config = {\r\n  APP_URL: \"https://api-reh-1meeting-forward.herokuapp.com\",\r\n  TOKEN_APP: \"d7073ee6cc586814598f5e91c398ccf0a2976b91927b9d55190fa12ac95acd0a85d7eff3050bb94e05c3263b7b3d7faad64b5f1ab4c8d972379551ad0789aeaf\"\r\n};\r\n// exports.main_config = {\r\n//   APP_URL: \"http://61.19.127.228:5050/api/v1\",\r\n//   TOKEN_APP: \"d7073ee6cc586814598f5e91c398ccf0a2976b91927b9d55190fa12ac95acd0a85d7eff3050bb94e05c3263b7b3d7faad64b5f1ab4c8d972379551ad0789aeaf\"\r\n// };\r\n"],"sourceRoot":""}